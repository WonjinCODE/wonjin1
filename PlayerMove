using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float moveSpeed = 5f;
    public float jumpForce = 10f;
    public float doubleJumpForce = 8f;
    public float dashForce = 15f;
    public float dashCooldown = 1f;
    public float dashDuration = 0.2f;

    private Rigidbody2D rb;
    private bool isGrounded;
    private bool canDoubleJump;
    private bool isDashing;
    private float lastDashTime;

    public Transform groundCheck;
    public float groundCheckRadius = 0.2f;
    public LayerMask groundLayer;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        // 이동 (좌우 + 앞뒤)
        float moveHorizontal = Input.GetAxis("Horizontal"); // A, D 또는 화살표 좌우
        float moveVertical = Input.GetAxis("Vertical"); // W, S 또는 화살표 상하
        Vector2 movement = new Vector2(moveHorizontal, moveVertical);
        rb.velocity = movement * moveSpeed;

        // 대쉬 입력 감지 (좌, 우, 위, 아래)
        if ((Input.GetKeyDown(KeyCode.A) || Input.GetKeyDown(KeyCode.D) || Input.GetKeyDown(KeyCode.W) || Input.GetKeyDown(KeyCode.S)) && !isDashing)
        {
            if (Time.time - lastDashTime >= dashCooldown)
            {
                lastDashTime = Time.time;

                if (Input.GetKeyDown(KeyCode.A))
                    Dash(Vector2.left); // 왼쪽 대쉬
                else if (Input.GetKeyDown(KeyCode.D))
                    Dash(Vector2.right); // 오른쪽 대쉬
                else if (Input.GetKeyDown(KeyCode.W))
                    Dash(Vector2.up); // 위쪽 대쉬
                else if (Input.GetKeyDown(KeyCode.S))
                    Dash(Vector2.down); // 아래쪽 대쉬
            }
        }

        // 점프 입력
        if (Input.GetKeyDown(KeyCode.Space))
        {
            if (isGrounded)
            {
                Jump(jumpForce);
            }
            else if (canDoubleJump)
            {
                Jump(doubleJumpForce);
                canDoubleJump = false;
            }
        }

        // 땅 체크
        isGrounded = Physics2D.OverlapCircle(groundCheck.position, groundCheckRadius, groundLayer);

        if (isGrounded)
        {
            canDoubleJump = true;
        }
    }

    void Jump(float force)
    {
        rb.velocity = new Vector2(rb.velocity.x, 0f); // 수직 속도 초기화
        rb.AddForce(Vector2.up * force, ForceMode2D.Impulse);
    }

    void Dash(Vector2 direction)
    {
        isDashing = true;
        rb.velocity = direction * dashForce;
        Invoke("EndDash", dashDuration);
    }

    void EndDash()
    {
        isDashing = false;
        rb.velocity = Vector2.zero;
    }

    void OnCollisionEnter2D(Collision2D collision)
    {
        // 바닥과 충돌했을 때
        if (collision.gameObject.CompareTag("Ground"))
        {
            isGrounded = true;
        }
    }
}
